version: '3.8'

services:
  # 主应用服务
  app:
    image: ${DOCKER_IMAGE:-ghcr.io/zzyReal666/python:develop}
    container_name: llm-learn-staging
    environment:
      - ENVIRONMENT=staging
      - LOG_LEVEL=DEBUG
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
      - PYTHONPATH=/app
    ports:
      - "7860:7860"
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - staging_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7860/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - staging_network
    command: python src/main.py run logging_demo

  # 监控服务（可选）
  monitoring:
    image: prom/prometheus:latest
    container_name: prometheus-staging
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - staging_network
    profiles:
      - monitoring

  # 日志收集服务（可选）
  log-aggregator:
    image: fluent/fluentd:v1.16-1
    container_name: fluentd-staging
    volumes:
      - ./logs:/var/log/app
      - ./monitoring/fluentd.conf:/fluentd/etc/fluent.conf
    networks:
      - staging_network
    profiles:
      - logging

volumes:
  staging_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  staging_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
